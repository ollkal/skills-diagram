{"version":3,"sources":["CompetenceSlider.js","CompetenceList.js","NameForm.js","AddItem.js","CompetencePage.js","App.js","reportWebVitals.js","index.js"],"names":["CompetenceSlider","item","onChange","React","useState","value","sliderValue","setSliderValue","className","Typography","skill","variant","display","gutterBottom","Slider","id","defaultValue","valueLabelDisplay","aria-labelledby","marks","label","min","max","onChangeCommitted","e","CompetenceList","list","map","NameForm","name","setName","type","placeholder","target","AddItem","onAdd","Button","color","onClick","options","scale","ticks","beginAtZero","responsive","CompetencePage","initialList","setList","event","newList","slice","i","onRemove","splice","concat","filter","length","data","labels","a","datasets","backgroundColor","borderColor","borderWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAgDeA,EA3CU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EACTC,IAAMC,SAASH,EAAKI,OADX,mBACxCC,EADwC,KAC3BC,EAD2B,KAkB/C,OACE,sBAAKC,UAAU,mBAAf,UACE,cAACC,EAAA,EAAD,UAAaR,EAAKS,QAClB,cAACD,EAAA,EAAD,CAAYE,QAAQ,UAAUC,QAAQ,QAAQC,cAAY,EAA1D,iMAKA,cAACC,EAAA,EAAD,CACEC,GAAId,EAAKS,MACTM,aAAc,EACdX,MAAOC,EACPW,kBAAkB,OAClBC,kBAAgB,kBAChBC,MAzBQ,CACZ,CACEd,MAAO,EACPe,MAAO,MAET,CACEf,MAAO,IACPe,MAAO,SAoBLC,IAAK,EACLC,IAAK,IACLC,kBAAmBrB,EAASD,EAAKS,OACjCR,SAlCN,SAA4BsB,EAAGnB,GAC7BE,EAAeF,QAewBJ,EAAKS,QCPjCe,G,OAbQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMxB,EAAT,EAASA,SAAT,OACrB,sBAAKM,UAAU,iBAAf,UACE,gDACCkB,EAAKC,KAAI,SAAC1B,GAAD,OACR,cAAC,EAAD,CAEEA,KAAMA,EACNC,SAAUA,GAFLD,EAAKS,eCWHkB,G,OAjBE,WAAO,IAAD,EACGxB,mBAAS,IADZ,mBACdyB,EADc,KACRC,EADQ,KAGrB,OACE,mCACE,qBAAKtB,UAAU,WAAf,SACE,uBACEuB,KAAK,OACL1B,MAAOwB,EACPG,YAAY,kBACZ9B,SAAU,SAACsB,GAAD,OAAOM,EAAQN,EAAES,OAAO5B,gB,iBCV/B6B,EAAU,SAAC,GAAD,IAAGL,EAAH,EAAGA,KAAM3B,EAAT,EAASA,SAAUiC,EAAnB,EAAmBA,MAAnB,OACrB,gCACE,uBACEJ,KAAK,OACLC,YAAY,YACZ3B,MAAOwB,EACP3B,SAAUA,IAGZ,cAACkC,EAAA,EAAD,CAAQzB,QAAQ,YAAY0B,MAAM,UAAUC,QAASH,EAArD,qBCJEI,EAAU,CACdC,MAAO,CACLC,MAAO,CAAEC,aAAa,GACtBrB,IAAK,EACLC,IAAK,KAEPqB,YAAY,GAyFCC,EAtFQ,WAAO,IAAD,EACHzC,IAAMC,SAASyC,KADZ,mBACpBnB,EADoB,KACdoB,EADc,OAEH3C,IAAMC,SAAS,IAFZ,mBAEpByB,EAFoB,KAEdC,EAFc,KA8D3B,OACE,qBAAKtB,UAAU,iBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEkB,KAAMA,EACNxB,SA9Da,SAACa,GAAD,OAAQ,SAACgC,EAAO1C,GACvC,IAAI2C,EAAUtB,EAAKuB,QAEnB,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQE,GAAGxC,QAAUK,EAAI,CAC3BiC,EAAQE,GAAG7C,MAAQA,EACnB,MAIJyC,EAAQE,KAqDEG,SA3CQ,SAACpC,GACnB,IAAIiC,EAAUtB,EAAKuB,QAEnB,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQE,GAAGxC,QAAUK,EAAI,CAC3BiC,EAAQI,OAAOF,EAAG,GAClB,MAIJJ,EAAQE,MAmCA,cAAC,EAAD,CAASnB,KAAMA,EAAM3B,SArE/B,SAAsB6C,GACpBjB,EAAQiB,EAAMd,OAAO5B,QAoEgC8B,MApDtC,WACf,IAAMa,EAAUtB,EAAK2B,OAAO,CAAE3C,MAAOmB,EAAMxB,MAAO,IAElDyC,EAAQE,GACRlB,EAAQ,YAmDJ,qBAAKtB,UAAU,SAAf,SACE,qBAAKA,UAAU,iBAAf,SAnCCkB,EAAK4B,QAAO,SAACrD,GAAD,OAAUA,EAAKI,MAAQ,KAAGkD,OAAS,GAoC9B,cAAC,IAAD,CAAOC,KAhCpB,CACTC,OAAQ/B,EAAK4B,QAAO,SAACrD,GAAD,OAAUA,EAAKI,MAAQ,KAAGsB,KAAI,SAAC+B,GAAD,OAAOA,EAAEhD,SAC3DiD,SAAU,CACR,CACEvC,MAAO,cACPoC,KAAM9B,EAAK4B,QAAO,SAACrD,GAAD,OAAUA,EAAKI,MAAQ,KAAGsB,KAAI,SAAC+B,GAAD,OAAOA,EAAErD,SACzDuD,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,KAwB8BvB,QAASA,cClF/CwB,MAVf,WACE,OACE,qBAAKvD,UAAU,MAAf,SACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,SCKOwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7e9e92c9.chunk.js","sourcesContent":["import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./CompetenceSlider.css\";\n\nconst CompetenceSlider = ({ item, onChange }) => {\n  const [sliderValue, setSliderValue] = React.useState(item.value);\n\n  function handleSliderChange(e, value) {\n    setSliderValue(value);\n  }\n\n  const marks = [\n    {\n      value: 0,\n      label: \"0%\",\n    },\n    {\n      value: 100,\n      label: \"100%\",\n    },\n  ];\n\n  return (\n    <div className=\"CompetenceSlider\" key={item.skill}>\n      <Typography>{item.skill}</Typography>\n      <Typography variant=\"caption\" display=\"block\" gutterBottom>\n        In publishing and graphic design, Lorem ipsum is a placeholder text\n        commonly used to demonstrate the visual form of a document or a typeface\n        without relying on meaningful content.\n      </Typography>\n      <Slider\n        id={item.skill}\n        defaultValue={0}\n        value={sliderValue}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"discrete-slider\"\n        marks={marks}\n        \n        min={0}\n        max={100}\n        onChangeCommitted={onChange(item.skill)}\n        onChange={handleSliderChange}\n      ></Slider>\n    </div>\n  );\n};\n\nexport default CompetenceSlider;\n","import React from \"react\";\nimport CompetenceSlider from \"./CompetenceSlider\";\nimport \"./CompetenceList.css\";\n\nconst CompetenceList = ({ list, onChange }) => (\n  <div className=\"CompetenceList\">\n    <h3>Rate my skills</h3>\n    {list.map((item) => (\n      <CompetenceSlider\n        key={item.skill}\n        item={item}\n        onChange={onChange}\n      ></CompetenceSlider>\n    ))}\n  </div>\n);\n\nexport default CompetenceList;\n","import React, { useState } from \"react\";\nimport \"./NameForm.css\";\n\nconst NameForm = () => {\n  const [name, setName] = useState(\"\");\n\n  return (\n    <>\n      <div className=\"NameForm\">\n        <input\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter your name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default NameForm;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const AddItem = ({ name, onChange, onAdd }) => (\n  <div>\n    <input\n      type=\"text\"\n      placeholder=\"New skill\"\n      value={name}\n      onChange={onChange}\n    />\n\n    <Button variant=\"contained\" color=\"primary\" onClick={onAdd}>\n      Add\n    </Button>\n  </div>\n);\n","import React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport \"./CompetencePage.css\";\nimport CompetenceList from \"./CompetenceList\";\nimport NameForm from \"./NameForm\";\nimport { initialList } from \"./initialList\";\nimport { AddItem } from \"./AddItem\";\n\nconst options = {\n  scale: {\n    ticks: { beginAtZero: true },\n    min: 0,\n    max: 100,\n  },\n  responsive: true,\n};\n\nconst CompetencePage = () => {\n  const [list, setList] = React.useState(initialList);\n  const [name, setName] = React.useState(\"\");\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  const changeSkillLevel = (id) => (event, value) => {\n    var newList = list.slice();\n\n    for (var i in newList) {\n      if (newList[i].skill === id) {\n        newList[i].value = value;\n        break;\n      }\n    }\n\n    setList(newList);\n  };\n\n  const addSkill = () => {\n    const newList = list.concat({ skill: name, value: 0 });\n\n    setList(newList);\n    setName(\"\");\n  };\n\n  const removeSkill = (id) => {\n    var newList = list.slice();\n\n    for (var i in newList) {\n      if (newList[i].skill === id) {\n        newList.splice(i, 1);\n        break;\n      }\n    }\n\n    setList(newList);\n  };\n\n  const showRadar = () => {\n    return list.filter((item) => item.value > 0).length > 2;\n  };\n\n  const prepdata = () => {\n    let data = {\n      labels: list.filter((item) => item.value > 0).map((a) => a.skill),\n      datasets: [\n        {\n          label: \"% of skills\",\n          data: list.filter((item) => item.value > 0).map((a) => a.value),\n          backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n          borderColor: \"rgba(255, 99, 132, 1)\",\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    return data;\n  };\n\n  return (\n    <div className=\"CompetencePage\">\n      <div className=\"row\">\n        <div className=\"menu-column\">\n          <div className=\"menu-column-content\">\n            <NameForm></NameForm>\n            <CompetenceList\n              list={list}\n              onChange={changeSkillLevel}\n              onRemove={removeSkill}\n            />\n            <AddItem name={name} onChange={handleChange} onAdd={addSkill} />\n          </div>\n        </div>\n        <div className=\"column\">\n          <div className=\"radar-content \">\n            {showRadar() && <Radar data={prepdata()} options={options} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CompetencePage;\n","import \"./App.css\";\nimport CompetencePage from \"./CompetencePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-Content\">\n        <CompetencePage></CompetencePage>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}