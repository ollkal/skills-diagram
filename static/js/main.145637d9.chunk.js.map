{"version":3,"sources":["CompetenceSlider.js","SkillsInput.js","Radar.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","CompetenceSlider","item","onChange","className","Typography","id","skill","Slider","defaultValue","value","valueLabelDisplay","aria-labelledby","marks","step","min","max","SkillsInput","list","map","initialList","options","scale","ticks","beginAtZero","responsive","plugins","title","display","text","AddItem","name","onAdd","type","placeholder","Button","variant","color","onClick","RadarChart","React","useState","setList","setName","event","console","log","newList","slice","i","target","concat","data","labels","a","datasets","label","backgroundColor","borderColor","borderWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.145637d9.chunk.js","sourcesContent":["import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./CompetenceSlider.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n});\n\nconst CompetenceSlider = ({ item, onChange }) => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"CompetenceSlider\" key={item.skill}>\n      <Typography id=\"discrete-slider-small-steps\">{item.skill}</Typography>\n      <Slider\n        id={item.skill}\n        defaultValue={10}\n        value={item.value}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"discrete-slider\"\n        marks\n        step={5}\n        min={0}\n        max={100}\n        onChange={onChange(item.skill)}\n      ></Slider>\n    </div>\n  );\n};\n\nexport default CompetenceSlider;\n","import React from \"react\";\nimport CompetenceSlider from \"./CompetenceSlider\"\nimport \"./SkillsInput.css\";\n\nconst SkillsInput = ({ list, onChange }) => (\n  <div className=\"SkillsInput\">\n    <h3>Rate my skills</h3>\n    {list.map((item) => (\n      <CompetenceSlider\n        key={item.skill}\n        item={item}\n        onChange={onChange}\n      ></CompetenceSlider>\n    ))}\n  </div>\n);\n\nexport default SkillsInput;\n","import React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport \"./Radar.css\";\nimport SkillsInput from \"./SkillsInput\";\nimport Button from \"@material-ui/core/Button\";\n\nconst initialList = [\n  {\n    skill: \"Frontend\",\n    value: 70,\n  },\n  {\n    skill: \"Backend\",\n    value: 56,\n  },\n  {\n    skill: \"Cloud development\",\n    value: 56,\n  },\n  {\n    skill: \"Azure\",\n    value: 55,\n  },\n  {\n    skill: \"iOS/Andorid\",\n    value: 78,\n  },\n  {\n    skill: \"AWS\",\n    value: 30,\n  },\n  {\n    skill: \"Javascript\",\n    value: 44,\n  },\n  {\n    skill: \"CI/CD\",\n    value: 66,\n  },\n\n  {\n    skill: \"Agile\",\n    value: 70,\n  },\n\n  {\n    skill: \"Devops\",\n    value: 20,\n  },\n];\n\nconst options = {\n  scale: {\n    ticks: { beginAtZero: true },\n  },\n  responsive: true,\n  plugins: {\n    title: {\n      display: true,\n      text: \"Map of my skills\",\n    },\n  },\n};\n\nconst RadarChart = () => {\n  const [list, setList] = React.useState(initialList);\n  const [name, setName] = React.useState(\"\");\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  const handleChanges = (id) => (event, value) => {\n    console.log(id);\n    console.log(value);\n    console.log(event);\n\n    var newList = list.slice();\n\n    for (var i in newList) {\n      if (newList[i].skill === id) {\n        newList[i].value = value;\n        break;\n      }\n    }\n\n    setList(newList);\n  };\n\n  function handleAdd() {\n    const newList = list.concat({ skill: name, value: 77 });\n\n    setList(newList);\n\n    setName(\"\");\n  }\n\n  let prepdata = () => {\n    let data = {\n      labels: list.map((a) => a.skill),\n      datasets: [\n        {\n          label: \"% of skills\",\n          data: list.map((a) => a.value),\n          backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n          borderColor: \"rgba(255, 99, 132, 1)\",\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    return data;\n  };\n\n  return (\n    <div className=\"Radar\">\n      <div className=\"row\">\n        <div className=\"menu-column\">\n          <SkillsInput list={list} onChange={handleChanges} />\n          <AddItem name={name} onChange={handleChange} onAdd={handleAdd} />\n        </div>\n        <div className=\"column\">\n          <Radar data={prepdata()} options={options} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AddItem = ({ name, onChange, onAdd }) => (\n  <div>\n    <input\n      type=\"text\"\n      placeholder=\"Add skill\"\n      value={name}\n      onChange={onChange}\n    />\n    <Button variant=\"contained\" color=\"primary\" onClick={onAdd}>\n      Add\n    </Button>\n  </div>\n);\n\nexport default RadarChart;\n","import \"./App.css\";\nimport Radar from \"./Radar\";\nimport SkillsForm from \"./SkillsForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-Content\">\n        <Radar></Radar>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}