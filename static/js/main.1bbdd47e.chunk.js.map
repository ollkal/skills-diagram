{"version":3,"sources":["CompetenceSlider.js","CompetenceList.js","NameForm.js","Radar.js","App.js","reportWebVitals.js","index.js"],"names":["CompetenceSlider","item","onChange","React","useState","value","sliderValue","setSliderValue","className","Typography","skill","variant","display","gutterBottom","Slider","id","defaultValue","valueLabelDisplay","aria-labelledby","marks","label","min","max","onChangeCommitted","e","CompetenceList","list","map","NameForm","name","setName","type","placeholder","target","initialList","options","scale","ticks","beginAtZero","responsive","plugins","title","text","AddItem","onAdd","Button","color","onClick","RadarChart","setList","event","newList","slice","i","concat","data","labels","a","datasets","backgroundColor","borderColor","borderWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bbdd47e.chunk.js","sourcesContent":["import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./CompetenceSlider.css\";\n\nconst CompetenceSlider = ({ item, onChange }) => {\n  const [sliderValue, setSliderValue] = React.useState(item.value);\n\n  function handleSliderChange(e, value) {\n    setSliderValue(value);\n  }\n\n  const marks = [\n    {\n      value: 0,\n      label: \"0%\",\n    },\n    {\n      value: 100,\n      label: \"100%\",\n    },\n  ];\n\n  return (\n    <div className=\"CompetenceSlider\" key={item.skill}>\n      <Typography>{item.skill}</Typography>\n      <Typography variant=\"caption\" display=\"block\" gutterBottom>\n        In publishing and graphic design, Lorem ipsum is a placeholder text\n        commonly used to demonstrate the visual form of a document or a typeface\n        without relying on meaningful content.\n      </Typography>\n      <Slider\n        id={item.skill}\n        defaultValue={0}\n        value={sliderValue}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"discrete-slider\"\n        marks={marks}\n        \n        min={0}\n        max={100}\n        onChangeCommitted={onChange(item.skill)}\n        onChange={handleSliderChange}\n      ></Slider>\n    </div>\n  );\n};\n\nexport default CompetenceSlider;\n","import React from \"react\";\nimport CompetenceSlider from \"./CompetenceSlider\";\nimport \"./CompetenceList.css\";\n\nconst CompetenceList = ({ list, onChange }) => (\n  <div className=\"CompetenceList\">\n    <h3>Rate my skills</h3>\n    {list.map((item) => (\n      <CompetenceSlider\n        key={item.skill}\n        item={item}\n        onChange={onChange}\n      ></CompetenceSlider>\n    ))}\n  </div>\n);\n\nexport default CompetenceList;\n","import React, { useState } from \"react\";\nimport \"./NameForm.css\";\n\nconst NameForm = () => {\n  const [name, setName] = useState(\"\");\n\n  return (\n    <>\n      <div className=\"NameForm\">\n        <input\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter your name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default NameForm;\n","import React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport \"./Radar.css\";\nimport CompetenceList from \"./CompetenceList\";\nimport NameForm from \"./NameForm\";\nimport Button from \"@material-ui/core/Button\";\n\nconst initialList = [\n  {\n    skill: \"Frontend\",\n    value: 70,\n  },\n  {\n    skill: \"Backend\",\n    value: 56,\n  },\n  {\n    skill: \"Cloud development\",\n    value: 56,\n  },\n  {\n    skill: \"Azure\",\n    value: 55,\n  },\n  {\n    skill: \"iOS/Andorid\",\n    value: 78,\n  },\n  {\n    skill: \"AWS\",\n    value: 30,\n  },\n  {\n    skill: \"Javascript\",\n    value: 44,\n  },\n  {\n    skill: \"CI/CD\",\n    value: 66,\n  },\n\n  {\n    skill: \"Agile\",\n    value: 70,\n  },\n\n  {\n    skill: \"Devops\",\n    value: 20,\n  },\n];\n\nconst options = {\n  scale: {\n    ticks: { beginAtZero: true },\n  },\n  responsive: true,\n  plugins: {\n    title: {\n      display: true,\n      text: \"Map of my skills\",\n    },\n  },\n};\n\nconst RadarChart = () => {\n  const [list, setList] = React.useState(initialList);\n  const [name, setName] = React.useState(\"\");\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  const handleChanges = (id) => (event, value) => {\n    var newList = list.slice();\n\n    for (var i in newList) {\n      if (newList[i].skill === id) {\n        newList[i].value = value;\n        break;\n      }\n    }\n\n    setList(newList);\n  };\n\n  function handleAdd() {\n    const newList = list.concat({ skill: name, value: 77 });\n\n    setList(newList);\n\n    setName(\"\");\n  }\n\n  let prepdata = () => {\n    let data = {\n      labels: list.map((a) => a.skill),\n      datasets: [\n        {\n          label: \"% of skills\",\n          data: list.map((a) => a.value),\n          backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n          borderColor: \"rgba(255, 99, 132, 1)\",\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    return data;\n  };\n\n  return (\n    <div className=\"Radar\">\n      <div className=\"row\">\n        <div className=\"menu-column\">\n          <div className=\"column-content\">\n            <NameForm></NameForm>\n            <CompetenceList list={list} onChange={handleChanges} />\n            <AddItem name={name} onChange={handleChange} onAdd={handleAdd} />\n          </div>\n        </div>\n        <div className=\"column\">\n          <div className=\"radar-content \">\n            <Radar data={prepdata()} options={options} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AddItem = ({ name, onChange, onAdd }) => (\n  <div>\n    <input\n      type=\"text\"\n      placeholder=\"New skill\"\n      value={name}\n      onChange={onChange}\n    />\n\n    <Button variant=\"contained\" color=\"primary\" onClick={onAdd}>\n      Add\n    </Button>\n  </div>\n);\n\nexport default RadarChart;\n","import \"./App.css\";\nimport Radar from \"./Radar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-Content\">\n        <Radar></Radar>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}